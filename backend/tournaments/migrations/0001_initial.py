# Generated by Django 3.2.4 on 2023-12-14 21:32

from django.db import migrations, models
import django.db.models.deletion
import tournaments.enums


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ru', models.CharField(max_length=tournaments.enums.CityEnums['NAME_MAX_LENGTH'], verbose_name='Название на русском')),
                ('name_en', models.TextField(max_length=tournaments.enums.CityEnums['NAME_MAX_LENGTH'], verbose_name='Название на английском')),
                ('country_code', models.CharField(max_length=tournaments.enums.CityEnums['COUNTRY_CODE_MAX_LENGTH'], verbose_name='Код страны')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
                'ordering': ('name_ru',),
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ru', models.CharField(max_length=tournaments.enums.CountryEnums['NAME_MAX_LENGTH'], verbose_name='Название на русском')),
                ('name_en', models.TextField(max_length=tournaments.enums.CountryEnums['NAME_MAX_LENGTH'], verbose_name='Название на английском')),
                ('country_code', models.CharField(max_length=tournaments.enums.CountryEnums['COUNTRY_CODE_MAX_LENGTH'], verbose_name='Код страны')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
                'ordering': ('name_ru',),
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(null=True)),
                ('owner_points', models.PositiveSmallIntegerField(default=tournaments.enums.MatchEnums['POINTS_DEFAULT_VALUE'], verbose_name='Очки хозяев')),
                ('guest_points', models.PositiveSmallIntegerField(default=tournaments.enums.MatchEnums['POINTS_DEFAULT_VALUE'], verbose_name='Очки гостей')),
                ('round', models.PositiveSmallIntegerField(default=tournaments.enums.MatchEnums['POINTS_DEFAULT_VALUE'], verbose_name='Раунд')),
            ],
            options={
                'verbose_name': 'Матч',
                'verbose_name_plural': 'Матчи',
                'ordering': ('datetime',),
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=tournaments.enums.ParticipantEnums['FULL_NAME_MAX_LENGTH'], verbose_name='ФИО')),
                ('photo', models.ImageField(upload_to='images/participants/', verbose_name='Фотография')),
                ('is_captain', models.BooleanField(default=False, verbose_name='Капитан')),
            ],
            options={
                'verbose_name': 'Участник',
                'verbose_name_plural': 'Участники',
                'ordering': ('full_name',),
            },
        ),
        migrations.CreateModel(
            name='ScheduleSystemType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=tournaments.enums.TypeEnums['TITLE_MAX_LENGTH'], verbose_name='Название')),
                ('description', models.TextField(max_length=tournaments.enums.TypeEnums['DESCRIPTION_MAX_LENGTH'], verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Система расписания',
                'verbose_name_plural': 'Системы расписания',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='SportType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=tournaments.enums.TypeEnums['TITLE_MAX_LENGTH'], verbose_name='Название')),
                ('description', models.TextField(max_length=tournaments.enums.TypeEnums['DESCRIPTION_MAX_LENGTH'], verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Вид спорта',
                'verbose_name_plural': 'Виды спорта',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=tournaments.enums.TeamEnums['TITLE_MAX_LENGTH'], verbose_name='Название')),
                ('logo', models.ImageField(upload_to='images/teams/', verbose_name='Логотип')),
                ('description', models.TextField(max_length=tournaments.enums.TeamEnums['DESCRIPTION_MAX_LENGTH'], verbose_name='Описание')),
                ('ban_dates', models.CharField(max_length=tournaments.enums.TeamEnums['TITLE_MAX_LENGTH'], verbose_name='Запрещенные дни')),
                ('rating', models.PositiveSmallIntegerField(verbose_name='Рейтинг')),
            ],
            options={
                'verbose_name': 'Команда',
                'verbose_name_plural': 'Команды',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='TournamentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=tournaments.enums.TypeEnums['TITLE_MAX_LENGTH'], verbose_name='Название')),
                ('description', models.TextField(max_length=tournaments.enums.TypeEnums['DESCRIPTION_MAX_LENGTH'], verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Тип турнира',
                'verbose_name_plural': 'Типы турнира',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=tournaments.enums.TournamentEnums['TITLE_MAX_LENGTH'], verbose_name='Название')),
                ('description', models.TextField(max_length=tournaments.enums.TournamentEnums['DESCRIPTION_MAX_LENGTH'], verbose_name='Описание')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='city', to='tournaments.city', verbose_name='Город')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='country', to='tournaments.country', verbose_name='Страна')),
            ],
            options={
                'verbose_name': 'Турнир',
                'verbose_name_plural': 'Турниры',
                'ordering': ('title',),
            },
        ),
    ]
